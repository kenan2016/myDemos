
gi常用操作
this is a git、gitLab learn note
推荐官方教程
https://git-scm.com/book/zh/v2/

git 配置和配置git 用户名和密码
git config --global user.name "xxxx"
git config --global user.email "xxxxx@qq.com"

查看配置
git config user.name

重点常用操作
从当前分支创建并切换分支
git checkout -b newBranch

git 将本地分推到远程仓库
git push origin oriBranch:mylocalBranch
表示将本地分支 mylocalBranch 推送到远程仓库 oriBranch 分支 ，如果不存在则会创建改分支

git 查看文件状态 git status 在ide中一般绿色表示已添加到待提交域，红色表示文件被修改，但是还未加到待提交域

git add . 将文件添加到待提交域。 

git commit -m "this is a test" 提交文件 并添加注释 "this is a test"


git 修改提交时的备注
https://www.jianshu.com/p/098d85a58bf1

解决.gitignore无法生效的问题
#清空缓存(注意最后有个点)
git rm -rf --cached .

拉取一下主分支代码到当前分支，但是不推荐这么做，推荐从本地主分支上拉取origin:naster 然后 到开发分支上 merge master
git pull orgin master


强制覆盖代码到远程分支
git push origin TELS-353:TELS-353 --force   远程分支代码名称

git 修改commit注释

从远程仓库获取最新代码到本地分支


$ git fetch origin master:master1
在本地建立master1分支，并下载远端的origin/master分支到master1分支中
https://blog.csdn.net/googler_offer/article/details/89466048

git 设置代理
https://www.cnblogs.com/yongy1030/p/11699086.html

gitLab 合并代码简单实践

如果需要把分支合并到master，
1.checkout 功能分支到本地；
2.rebase 之前要pull master分支;
3.rebase current branch to master；
4.checkout branch master到当前分支，merge 刚才的功能分支到master；
5.push mater到远程分支。


master git pull origin master

git checkout dev-20200403
--  在这个分支 dev-20200403 执行  git pull master
在这个 dev-20200403 分支上执行 git rebase master
git checkout master 
merge dev-20200403

注意不要直接对master，uat，prod3个远程分支直接push代码

rebase 之前要pull master分支，
保证是最新的。合并完成之后，新的开发需要拉取最新的master进行开发


1. dev分支开发完毕后推送远程；
2.切换master分支拉取远程；
3.切换dev分支rebase到master分支;





